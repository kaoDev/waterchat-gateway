Mai 18, 2017 11:48:54 PM com.orientechnologies.common.log.OLogManager log
INFORMATION: OrientDB auto-config DISKCACHE=247MB (heap=247MB direct=247MB os=16.345MB), assuming maximum direct memory size equals to maximum JVM heap size
Mai 18, 2017 11:48:54 PM com.orientechnologies.common.log.OLogManager log
WARNUNG: MaxDirectMemorySize JVM option is not set or has invalid value, that may cause out of memory errors. Please set the -XX:MaxDirectMemorySize=16345m option when you start the JVM.
java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Unknown Source)
	at java.lang.AbstractStringBuilder.ensureCapacityInternal(Unknown Source)
	at java.lang.AbstractStringBuilder.append(Unknown Source)
	at java.lang.StringBuilder.append(Unknown Source)
	at scala.collection.mutable.StringBuilder.append(StringBuilder.scala:200)
	at org.ensime.indexer.MethodName.fqnString(domain.scala:134)
	at org.ensime.indexer.IndexService$$anonfun$1.applyOrElse(IndexService.scala:116)
	at org.ensime.indexer.IndexService$$anonfun$1.applyOrElse(IndexService.scala:109)
	at scala.PartialFunction$$anonfun$runWith$1.apply(PartialFunction.scala:141)
	at scala.PartialFunction$$anonfun$runWith$1.apply(PartialFunction.scala:140)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableLike$class.collect(TraversableLike.scala:271)
	at scala.collection.immutable.List.collect(List.scala:326)
	at org.ensime.indexer.IndexService.persist(IndexService.scala:119)
	at org.ensime.indexer.SearchService.persist(SearchService.scala:202)
	at org.ensime.indexer.SearchService$$anonfun$9.apply(SearchService.scala:157)
	at org.ensime.indexer.SearchService$$anonfun$9.apply(SearchService.scala:157)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:253)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:36)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Exception in thread "pool-5-thread-4" java.lang.OutOfMemoryError: Java heap space
	at java.util.ArrayList$SubList.listIterator(Unknown Source)
	at java.util.AbstractList.listIterator(Unknown Source)
	at java.util.ArrayList$SubList.iterator(Unknown Source)
	at java.util.AbstractCollection.toArray(Unknown Source)
	at java.util.regex.Pattern.split(Unknown Source)
	at java.lang.String.split(Unknown Source)
	at java.lang.String.split(Unknown Source)
	at scala.concurrent.duration.Duration$.scala$concurrent$duration$Duration$$words(Duration.scala:73)
	at scala.concurrent.duration.Duration$$anonfun$3.apply(Duration.scala:90)
	at scala.concurrent.duration.Duration$$anonfun$3.apply(Duration.scala:90)
	at scala.collection.MapLike$MappedValues.get(MapLike.scala:249)
	at scala.collection.MapLike$class.apply(MapLike.scala:140)
	at scala.collection.AbstractMap.apply(Map.scala:59)
	at scala.concurrent.duration.FiniteDuration.unitString(Duration.scala:601)
	at scala.concurrent.duration.FiniteDuration.toString(Duration.scala:602)
	at java.lang.String.valueOf(Unknown Source)
	at scala.collection.mutable.StringBuilder.append(StringBuilder.scala:200)
	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:223)
	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:227)
	at scala.concurrent.Await$$anonfun$result$1.apply(package.scala:190)
	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
	at scala.concurrent.Await$.result(package.scala:190)
	at org.github.dragos.vscode.EnsimeLanguageServer$$anonfun$gotoDefinitionRequest$1.apply(EnsimeLanguageServer.scala:232)
	at org.github.dragos.vscode.EnsimeLanguageServer$$anonfun$gotoDefinitionRequest$1.apply(EnsimeLanguageServer.scala:232)
	at scala.Option.map(Option.scala:146)
	at org.github.dragos.vscode.EnsimeLanguageServer.gotoDefinitionRequest(EnsimeLanguageServer.scala:232)
	at langserver.core.LanguageServer$$anonfun$1.apply(LanguageServer.scala:23)
	at langserver.core.LanguageServer$$anonfun$1.apply(LanguageServer.scala:16)
	at langserver.core.Connection$$anonfun$handleCommand$1.apply(Connection.scala:161)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
java.util.concurrent.RejectedExecutionException: Task scala.concurrent.impl.Future$PromiseCompletingRunnable@e60469 rejected from java.util.concurrent.ThreadPoolExecutor@753478[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.reject(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.execute(Unknown Source)
	at scala.concurrent.impl.ExecutionContextImpl$$anon$1.execute(ExecutionContextImpl.scala:136)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:494)
	at org.ensime.indexer.lucene.SimpleLucene.update(SimpleLucene.scala:135)
	at org.ensime.indexer.lucene.SimpleLucene.delete(SimpleLucene.scala:152)
	at org.ensime.indexer.IndexService.remove(IndexService.scala:144)
	at org.ensime.indexer.SearchService.delete(SearchService.scala:362)
	at org.ensime.indexer.IndexingQueueActor$$anonfun$receive$1$$anonfun$applyOrElse$2$$anonfun$apply$18.apply(SearchService.scala:492)
	at org.ensime.indexer.IndexingQueueActor$$anonfun$receive$1$$anonfun$applyOrElse$2$$anonfun$apply$18.apply(SearchService.scala:487)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:36)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
